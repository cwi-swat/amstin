  grammar GrammarGrammar
  start Grammar
  
  Grammar ::= [Grammar] "grammar" name:sym "start" \start:Rule^

  Rule ::= [Rule] name:key "::=" arg:Alt

  Alt ::= [Alt] alts:{Create "|"}+

  Create ::= [Create] "[" name:sym "]" arg:Sequence
  	   | Sequence

  Sequence ::= [Sequence] elements:Field*


  Field ::= [Field] name:sym ":" arg:Pattern
   	  | Pattern
  
  Pattern ::= 
            [Value] kind:"int"
          | [Value] kind:"str"
          | [Value] kind:"sqstr"
          | [Value] kind:"real"
          | [Value] kind:"bool"
          | [Value] kind:"sym"
	  | [Code] "@" code:str
	  | [Key] "key"
          | [Ref] name:sym "^"
          | [Lit] value:str				@"self.case_sensitive = true"
          | [Lit] value:sqstr				@"self.case_sensitive = false"
          | [Call] rule:Rule^
          | [Regular] arg:Pattern "?"			@"self.optional = true"
          | [Regular] arg:Pattern "+"  			@"self.many = true"
          | [Regular] arg:Pattern "*"  			@"self.optional = true; self.many = true"
          | [Regular] "{" arg:Pattern sep:str "}" "+" 	@"self.many = true"
          | [Regular] "{" arg:Pattern sep:str "}" "*" 	@"self.optional = true; self.many = true"
	  | "(" Alts ")"


