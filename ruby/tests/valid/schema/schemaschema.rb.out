Schema
  name: SchemaSchema
  classes
    #0 Klass
      name: Schema
      super: nil
      fields
        #0 Field
          name: name
          type: str
          optional: false
          many: false
          key: true
          inverse: nil
          computed: 
        #1 Field
          name: classes
          type: Klass
          optional: true
          many: true
          key: false
          inverse: nil
          computed: @types.select(&:Klass?)
        #2 Field
          name: primitives
          type: Primitive
          optional: true
          many: true
          key: false
          inverse: nil
          computed: @types.select(&:Primitive?)
        #3 Field
          name: types
          type: Type
          optional: true
          many: true
          key: false
          inverse: schema
          computed: 
    #1 Klass
      name: Klass
      super: Type
      fields
        #0 Field
          name: name
          owner: Type
          type: str
          optional: false
          many: false
          key: true
          inverse: nil
          computed: 
        #1 Field
          name: schema
          owner: Type
          type: Schema
          optional: false
          many: false
          key: false
          inverse: types
          computed: 
        #2 Field
          name: super
          optional: true
          many: false
          key: false
          inverse: subtypes
          computed: 
        #3 Field
          name: subtypes
          optional: true
          many: true
          key: false
          inverse: super
          computed: 
        #4 Field
          name: defined_fields
          type: Field
          optional: true
          many: true
          key: false
          inverse: owner
          computed: 
        #5 Field
          name: fields
          type: Field
          optional: true
          many: true
          key: false
          inverse: nil
          computed: @super ? @defined_fields + @super.fields : @defined_fields
    #2 Klass
      name: Primitive
      super: Type
      fields
        #0 Field
          name: name
          owner: Type
          type: str
          optional: false
          many: false
          key: true
          inverse: nil
          computed: 
        #1 Field
          name: schema
          owner: Type
          type: Schema
          optional: false
          many: false
          key: false
          inverse: types
          computed: 
    #3 Klass
      name: Type
      super: nil
      fields
        #0 Field
          name: name
          type: str
          optional: false
          many: false
          key: true
          inverse: nil
          computed: 
        #1 Field
          name: schema
          type: Schema
          optional: false
          many: false
          key: false
          inverse: types
          computed: 
    #4 Klass
      name: Field
      super: nil
      fields
        #0 Field
          name: name
          type: str
          optional: false
          many: false
          key: true
          inverse: nil
          computed: 
        #1 Field
          name: owner
          type: Klass
          optional: false
          many: false
          key: true
          inverse: defined_fields
          computed: 
        #2 Field
          name: type
          type: Type
          optional: false
          many: false
          key: false
          inverse: nil
          computed: 
        #3 Field
          name: optional
          type: bool
          optional: false
          many: false
          key: false
          inverse: nil
          computed: 
        #4 Field
          name: many
          type: bool
          optional: false
          many: false
          key: false
          inverse: nil
          computed: 
        #5 Field
          name: key
          type: bool
          optional: false
          many: false
          key: false
          inverse: nil
          computed: 
        #6 Field
          name: inverse
          optional: true
          many: false
          key: false
          inverse: inverse
          computed: 
        #7 Field
          name: computed
          type: str
          optional: true
          many: false
          key: false
          inverse: nil
          computed: 
  primitives
    #0 str
    #1 int
    #2 bool
    #3 real
