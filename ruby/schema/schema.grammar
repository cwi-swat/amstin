grammar SchemaGrammar 

start Schema

Schema ::= [Schema] "schema" name:sym primitives:Primitive* classes:Klass* "end"

Primitive ::= [Primitive] "primitive" name:sym

Klass ::= [Klass] "class" name:sym Parent? fields:Field* "end"

Parent ::= "<" super:Klass^

Field ::= [Field] Key name:sym ":" type:Type Multiplicity Inverse?

Key ::= "#" @"self.key = true"
      | @"self.key = false"

Type ::=  Primitive^
	| Klass^

Multiplicity ::= "*" @"self.many = true; self.optional = true"
	       | "?" @"self.many = false; self.optional = true" 
	       | "+" @"self.many = true; self.optional = false"
	       | @"self.many = false; self.optional = false"

Inverse ::= "/" inverse:Field^

